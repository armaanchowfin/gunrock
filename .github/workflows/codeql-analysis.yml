name: "CodeQL"

on:
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        *  * * * *
    - cron: '0 0 1 * *' # At 00:00 on day-of-month 1.
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug)
  BUILD_TYPE: Release
  ARCHITECTURES: 90
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: true
      matrix:
        language: [ 'cpp' ]

    steps:
      # Fetch/Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Fetch CUDA toolkit using Jimver/cuda-toolkit
      - name: Fetch CUDA toolkit
        uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: '12.5.0'
          linux-local-args: '["--toolkit"]'
          
      # Runs a single command using the runners shell
      - name: Check nvcc version
        run: nvcc -V
          
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      
      - name: Configure cmake
        run: cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D CMAKE_CUDA_ARCHITECTURES=${{env.ARCHITECTURES}}
        
      - name: Build all applications
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target sssp 

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
