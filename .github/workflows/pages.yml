name: Documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  ARCHITECTURES: 90

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          
      # Fetch CUDA toolkit using Jimver/cuda-toolkit
      - name: Fetch CUDA toolkit
        uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: '12.5.0'
          linux-local-args: '["--toolkit"]'
      
      - name: Configure cmake for Doxygen
        run: cmake -B ${{github.workspace}}/build -DESSENTIALS_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CUDA_ARCHITECTURES=${{env.ARCHITECTURES}}
        shell: bash
        env:
          CC:   gcc-11
          CXX:  g++-11

      # Testing with a different python
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.7' 

      - name: Checkout
        uses: actions/checkout@v4
        
      # Install requirements
      # Note: doxygen is not visible in $PATH until the subsequent actions.
      - name: Install Doxygen
        run: |
          wget https://www.doxygen.nl/files/doxygen-1.9.5.linux.bin.tar.gz
          tar -xvf doxygen-1.9.5.linux.bin.tar.gz
          echo "${{github.workspace}}/doxygen-1.9.5/bin" >> $GITHUB_PATH
        shell: bash
        
      - name: Install/Verify Requirements
        run: |
          python --version
          doxygen --version
          cd ${{github.workspace}}/docs/sphinx
          pip install -r requirements.txt

      # Build Sphinx documentation
      - name: Build Documentation
        run: |
          cd ${{github.workspace}}/docs/sphinx
          git clone https://github.com/gunrock/gunrock.wiki.git
          make html
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload html directory
          path: './docs/sphinx/_build/html'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
